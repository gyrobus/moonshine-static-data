<?php

declare(strict_types=1);

namespace Gyrobus\MoonshineStaticData\Pages;

use Gyrobus\MoonshineStaticData\Models\StaticData;
use Gyrobus\MoonshineStaticData\Models\StaticDataGroup;
use Gyrobus\MoonshineStaticData\Resources\StaticDataResource;
use Gyrobus\MoonshineCropper\Fields\Cropper;
use MoonShine\Laravel\Fields\Slug;
use MoonShine\Laravel\Http\Responses\MoonShineJsonResponse;
use MoonShine\Laravel\MoonShineRequest;
use MoonShine\Laravel\Pages\Page;
use MoonShine\Contracts\UI\ComponentContract;
use MoonShine\Laravel\TypeCasts\ModelCaster;
use MoonShine\Support\Enums\FormMethod;
use MoonShine\Support\Enums\ToastType;
use MoonShine\TinyMce\Fields\TinyMce;
use MoonShine\UI\Components\FormBuilder;
use MoonShine\UI\Components\Layout\Box;
use MoonShine\UI\Components\Tabs;
use MoonShine\UI\Components\Tabs\Tab;
use MoonShine\UI\Fields\File;
use MoonShine\UI\Fields\Hidden;
use MoonShine\UI\Fields\Image;
use MoonShine\UI\Fields\Json;
use MoonShine\UI\Fields\Number;
use MoonShine\UI\Fields\Phone;
use MoonShine\UI\Fields\Select;
use MoonShine\UI\Fields\Text;
use MoonShine\UI\Fields\Textarea;

class GroupItemCreate extends Page
{
    /**
     * @return array<string, string>
     */
    public function getBreadcrumbs(): array
    {
        //$item = $this->getResource()->getItem();

        return [
            toPage(GroupIndex::class, StaticDataResource::class) => __('moonshine-static-data::main.title'),
            '#' => __('moonshine-static-data::main.addData')
        ];
    }

    public function getTitle(): string
    {
        return __('moonshine-static-data::main.addData');
    }

    protected function prepareBeforeRender(): void
    {
        parent::prepareBeforeRender(); // TODO: Change the autogenerated stub

        if (!config('moonshine-static-data.create_param')) {
            oops404();
        }
    }

    /**
     * @return list<ComponentContract>
     */
    protected function components(): iterable
	{
        $groups = StaticDataGroup::get()
            ->keyBy('name')
            ->map(fn($i) => $i->name)
            ->toArray();

		return [
            Box::make([
                FormBuilder::make()
                    ->fields([
                        Text::make(__('moonshine-static-data::main.dataName'), 'name')
                            ->reactive()
                            ->required(),
                        Slug::make(__('moonshine-static-data::main.dataSlug'), 'slug')
                            ->unique()
                            ->from('name')
                            ->live()
                            ->required(),
                        Select::make(__('moonshine-static-data::main.parentGroup'), 'group')
                            ->options($groups)
                            ->required(),
                        Select::make(__('moonshine-static-data::main.type'), 'type')
                            ->options([
                                'editor' => __('moonshine-static-data::main.editor'),
                                'interval' => __('moonshine-static-data::main.interval'),
                                'image' => __('moonshine-static-data::main.image'),
                                'text' => __('moonshine-static-data::main.text'),
                                'phone' => __('moonshine-static-data::main.phone'),
                            ])
                            ->required()
                    ])
                    ->asyncMethod('createGroupItem')
            ])
        ];
	}
}
